(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{104:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return h}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=i.a.createContext({}),c=function(e){var t=i.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),d=n,h=u["".concat(o,".").concat(d)]||u[d]||b[d]||r;return a?i.a.createElement(h,s(s({ref:t},p),{},{components:a})):i.a.createElement(h,s({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},105:function(e,t,a){"use strict";var n=a(0),i=a(19);t.a=function(){var e=Object(n.useContext)(i.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},106:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return o}));var n=a(105),i=a(107);function r(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var r=void 0===n?{}:n,o=r.forcePrependBaseUrl,s=void 0!==o&&o,l=r.absolute,p=void 0!==l&&l;if(!a)return a;if(a.startsWith("#"))return a;if(Object(i.b)(a))return a;if(s)return t+a;var c=a.startsWith(t)?a:t+a.replace(/^\//,"");return p?e+c:c}(r,a,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},107:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return i}))},124:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/wasp-compilation-6585aca9de412cf27332aa8f21e7da4d.png"},65:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return u}));var n=a(2),i=a(6),r=(a(0),a(104)),o=a(106),s={title:"Creating a programming language for developing web apps with less code",author:"Martin Sosic",author_title:"Co-founder @ Wasp",author_url:"https://github.com/martinsos",tags:["wasp"]},l={permalink:"/blog/2021/03/02/wasp-alpha",source:"@site/blog/2021-03-02-wasp-alpha.md",description:"\x3c!---",date:"2021-03-02T00:00:00.000Z",tags:[{label:"wasp",permalink:"/blog/tags/wasp"}],title:"Creating a programming language for developing web apps with less code",readingTime:6.68,truncated:!0,nextItem:{title:"Journey to YCombinator",permalink:"/blog/2021/02/23/journey-to-ycombinator"}},p=[{value:"Why Wasp?",id:"why-wasp",children:[]},{value:"Why a language (DSL), aren\u2019t frameworks solving this already?",id:"why-a-language-dsl-arent-frameworks-solving-this-already",children:[]},{value:"How does it work?",id:"how-does-it-work",children:[]},{value:"Where is Wasp now and where is it going?",id:"where-is-wasp-now-and-where-is-it-going",children:[{value:"What Wasp currently supports:",id:"what-wasp-currently-supports",children:[]},{value:"What is coming:",id:"what-is-coming",children:[]}]}],c={rightToc:p};function u(e){var t=e.components,s=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},c,s,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",{align:"center"},Object(r.b)("img",{alt:"Wasp logo",src:Object(o.a)("img/wasp-logo-wide.png"),height:"150px"})),Object(r.b)("p",null,"For the last year and a half, my twin brother and I have been working on ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://wasp-lang.dev"}),"Wasp"),": a new programming language for developing full-stack web apps with less code."),Object(r.b)("p",null,"Wasp is a simple declarative language that makes developing web apps easy while still allowing you to use the latest technologies like React, Node.js, and Prisma."),Object(r.b)("p",null,"In this post I will share with you why we believe Wasp could be a big thing for web development, how it works, where are we right now and what is the plan for the future!"),Object(r.b)("h2",{id:"why-wasp"},"Why Wasp?"),Object(r.b)("p",null,"You know how to use React, know your way around HTML/CSS/\u2026, know how to write business logic on the backend (e.g. in Node), but when you want to build an actual web app and deploy it for others to use, you drown in all the details and extra work - responsive UI, proper error handling, security, building, deployment, authentication, managing server state on the client, managing database, different environments, ...."),Object(r.b)("p",{align:"center"},Object(r.b)("img",{alt:"Iceberg of web app development",src:Object(o.a)("img/iceberg-of-web-app-dev.png"),width:"500px"})),Object(r.b)("p",null,"We are building Wasp because even though we are both experienced developers and have worked on multiple complex web apps in various technologies (JQuery -> Backbone -> Angular -> React, own scripts / makefile -> Grunt -> Gulp -> Webpack, PHP -> Java -> Node.js, \u2026), we still feel ",Object(r.b)("strong",{parentName:"p"},"building web apps is harder than it should be"),", due to a lot of boilerplate and repetitive work involved in the process.",Object(r.b)("br",{parentName:"p"}),"\n","While the tech stack keeps advancing rapidly, the core requirements of the apps are mostly remaining the same (auth, routing, data model CRUD, ACL, \u2026)."),Object(r.b)("p",null,"I love the blog post from Jose Aguinaga about this very topic, from 2016 but still feels very true: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f"}),'"How it feels to learn JavaScript in 2016"'),"."),Object(r.b)("p",null,"That is why almost 2 years ago we started thinking about separating web app specification (what it should do) from its implementation (how it should do it).",Object(r.b)("br",{parentName:"p"}),"\n","This led us to the idea of extracting common web app features and concepts into a special specification language (Wasp), while the implemenation details are still described via a modern stack (right now React, Node.js, Prisma)."),Object(r.b)("p",null,"Our vision with Wasp is to create a powerful but simple language where you can describe your web app as humanly as possible. We want to make the top of that iceberg on the image above as pleasant as possible while making the bottom part much smaller.",Object(r.b)("br",{parentName:"p"}),"\n","In such language, with just a few words, you can specify pages and their routes, specify which type of authentication you want, define basic entities / data models, describe basic data flow, choose where you want to deploy, implement specific details in React/Node, and let Wasp take care of connecting it all, building it and deploying it."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-css",metastring:'title="Example of wasp code describing part of a simple full-stack web app."',title:'"Example',of:!0,wasp:!0,code:!0,describing:!0,part:!0,a:!0,simple:!0,"full-stack":!0,web:!0,'app."':!0}),'app todoApp {\n  title: "ToDo App" /* visible in tab */\n}\n\nroute "/" -> page Main\npage Main {\n  component: import Main from "@ext/Main.js"  /* Import your React code. */\n}\n\nauth { /* full-stack auth out-of-the-box */\n  userEntity: User,\n  methods: [ EmailAndPassword ],\n}\n\nentity User {=psl\n  id          Int     @id @default(autoincrement())\n  email       String  @unique\n  password    String\npsl=}\n')),Object(r.b)("p",null,"Check ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/wasp-lang/wasp/blob/master/examples/tutorials/TodoApp/main.wasp"}),"here")," for the complete example."),Object(r.b)("h2",{id:"why-a-language-dsl-arent-frameworks-solving-this-already"},"Why a language (DSL), aren\u2019t frameworks solving this already?"),Object(r.b)("p",null,"Frameworks (like e.g. Ruby on Rails or Meteor) are a big inspiration to us.\nHowever, we want to take things one step further - by designing a language specialized for the domain of web apps (a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Domain-specific_language"}),"DSL"),") we can get rid of a lot of boilerplate and provide a cleaner & simpler developer experience."),Object(r.b)("p",null,"On the other hand, we are not trying to replace everything with Wasp nor think that would make sense - just the opposite, Wasp acts as a \u201cglue\u201d between your React and Node.js code, saving you from the grunt work while allowing you to keep the flexibility of writing your own code.\n",Object(r.b)("strong",{parentName:"p"},"The majority of the code is still being written in React and Node.js, with Wasp serving as the backbone of your whole application.")),Object(r.b)("p",null,"Another benefit of a DSL is that it allows Wasp to ",Object(r.b)("strong",{parentName:"p"},"understand the web app\u2019s requirements during the build time and reason about i")," before generating the final code, and this is what we are especially excited about.",Object(r.b)("br",{parentName:"p"}),"\n","For example, when generating code to be deployed to production, it could pick the most appropriate architecture based on its understanding of the web app and deploy it to serverless or another type of architecture (or even a combination).\nAnother example would be reusing your data model logic through all the parts of the stack while defining it just once in Wasp.",Object(r.b)("br",{parentName:"p"}),"\n","DSL opens the potential for optimizations, static analysis, extensibility, and unparalleled ergonomics."),Object(r.b)("h2",{id:"how-does-it-work"},"How does it work?"),Object(r.b)("p",null,"Wasp\u2019s compiler is built in Haskell and it compiles the source code that is a combination of .wasp files and source code in React/Node.js into the target code in just React and Node.js (currently in Javascript, but we plan to move to Typescript soon)."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Wasp compilation diagram",src:a(124).default})),Object(r.b)("p",null,"While right now only React and Node.js are supported, we plan to support multiple other technologies in the future."),Object(r.b)("p",null,"Generated code is human readable and can easily be inspected and even ejected if Wasp becomes too limiting.\nIf not ejecting, there is no need for you to ever look at the generated code - it is generated by Wasp in the background."),Object(r.b)("p",null,"Wasp is used via ",Object(r.b)("inlineCode",{parentName:"p"},"wasp")," CLI - to run wasp project in development, all you need to do is run ",Object(r.b)("inlineCode",{parentName:"p"},"wasp start"),"."),Object(r.b)("p",{align:"center"},Object(r.b)("img",{alt:"Iceberg of web app development",src:Object(o.a)("img/wasp-cli-output.png")})),Object(r.b)("h2",{id:"where-is-wasp-now-and-where-is-it-going"},"Where is Wasp now and where is it going?"),Object(r.b)("p",null,"Our big vision is to move as much of the web app domain knowledge as possible into the Wasp language itself, giving Wasp more power and flexibility.",Object(r.b)("br",{parentName:"p"}),"\n","Ultimately, since Wasp would have such a deep understanding of the web app's requirements, we could generate a visual editor on top of it - allowing non-developers to participate in development alongside developers."),Object(r.b)("p",null,"Also, Wasp wouldn't be tied to the specific technology but rather support multiple technologies (React/Angular/..., Node/Go/...)."),Object(r.b)("p",null,"We are currently in Alpha and many features are still rough or missing, but you can try it out and build and deploy web apps!\nThere are things we haven\u2019t solved yet and others that will probably change as we progress."),Object(r.b)("h3",{id:"what-wasp-currently-supports"},"What Wasp currently supports:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u2705 full-stack auth (email & password)"),Object(r.b)("li",{parentName:"ul"},"\u2705 pages & routing"),Object(r.b)("li",{parentName:"ul"},"\u2705 blurs the line between client & server - define your server actions and queries and call them directly in your client code (RPC)!"),Object(r.b)("li",{parentName:"ul"},"\u2705 smart caching of server actions and queries (automatic cache invalidation)"),Object(r.b)("li",{parentName:"ul"},"\u2705 entity (data model) definition with Prisma.io"),Object(r.b)("li",{parentName:"ul"},"\u2705 ACL on frontend"),Object(r.b)("li",{parentName:"ul"},"\u2705 importing NPM dependencies ")),Object(r.b)("h3",{id:"what-is-coming"},"What is coming:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"\u23f3 ACL on backend"),Object(r.b)("li",{parentName:"ul"},"\u23f3 one-click deployment"),Object(r.b)("li",{parentName:"ul"},"\u23f3 more auth methods (Google, Linkedin, ...)"),Object(r.b)("li",{parentName:"ul"},"\u23f3 tighter integration of entities with other features"),Object(r.b)("li",{parentName:"ul"},"\u23f3 themes and layouts"),Object(r.b)("li",{parentName:"ul"},"\u23f3 support for explicitly defined server API"),Object(r.b)("li",{parentName:"ul"},"\u23f3 inline JS - ability to mix JS code with Wasp code!"),Object(r.b)("li",{parentName:"ul"},"\u23f3 Typescript support"),Object(r.b)("li",{parentName:"ul"},"\u23f3 server-side rendering"),Object(r.b)("li",{parentName:"ul"},"\u23f3 Visual Editor"),Object(r.b)("li",{parentName:"ul"},"\u23f3 support for different languages on backend"),Object(r.b)("li",{parentName:"ul"},"\u23f3 richer wasp language with better tooling ")),Object(r.b)("p",null,"You can check out our repo at ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/wasp-lang/wasp"}),"https://github.com/wasp-lang/wasp")," and give it a try at ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://wasp-lang.dev/docs"}),"https://wasp-lang.dev/docs")," -> we are always looking for feedback and suggestions on how to shape Wasp!"),Object(r.b)("p",null,"We also have a community on ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://discord.com/invite/rzdnErX"}),"Discord"),", where we chat about Wasp-related stuff."))}u.isMDXComponent=!0}}]);